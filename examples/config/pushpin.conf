[global]
include={libdir}/internal.conf

# directory to save runtime files
rundir=run

# prefix for zmq ipc specs
ipc_prefix=pushpin-

# port offset for zmq tcp specs and http control server
port_offset=0

# TTL (seconds) for connection stats
stats_connection_ttl=120

# whether to send individual connection stats
stats_connection_send=true


[runner]
# services to start
services=connmgr,proxy,handler

# plain HTTP port to listen on for client connections
http_port=7999

# list of HTTPS ports to listen on for client connections (you must have certs set)
#https_ports=443

# list of unix socket paths to listen on for client connections
#local_ports={rundir}/{ipc_prefix}server

# directory to save log files
logdir=log

# logging level. 2 = info, >2 = verbose
log_level=2

# client full request header must fit in this buffer
client_buffer_size=8192

# maximum number of client connections
client_maxconn=50000

# whether connections can use compression
allow_compression=false

# paths
mongrel2_bin=mongrel2
m2sh_bin=m2sh
zurl_bin=zurl


[proxy]
# routes config file (path relative to location of this file)
routesfile=routes

# enable debug mode to get informative error responses
debug=false

# whether to use automatic CORS and JSON-P wrapping
auto_cross_origin=false

# whether to accept x-forwarded-proto
accept_x_forwarded_protocol=false

# whether to assert x-forwarded-proto
set_x_forwarded_protocol=proto-only

# how to treat x-forwarded-for. example: "truncate:0,append"
x_forwarded_for=

# how to treat x-forwarded-for if grip-signed
x_forwarded_for_trusted=

# the following headers must be marked in order to qualify as orig
orig_headers_need_mark=

# whether to accept Pushpin-Route header
accept_pushpin_route=false

# value to append to the CDN-Loop header
cdn_loop=

# include client IP address in logs
log_from=false

# include client user agent in logs
log_user_agent=false

# for signing proxied requests
sig_iss=pushpin

# for signing proxied requests. use "base64:" prefix for binary key
sig_key=changeme

# use this to allow grip to be forwarded upstream (e.g. to fanout.io)
upstream_key=

# for the sockjs iframe transport
sockjs_url=http://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js

# updates check has three modes:
#   report: check for new pushpin version and report anonymous usage info to
#           the pushpin developers
#   check:  check for new pushpin version only, don't report anything
#   off:    don't do any reporting or checking
# pushpin will output a log message when a new version is available. report
# mode helps the pushpin project build credibility, so please enable it if you
# enjoy this software :)
updates_check=report

# use this field to identify your organization in updates requests. if left
# blank, updates requests will be anonymous
organization_name=


[handler]
# ipc permissions (octal)
#ipc_file_mode=777

# bind PULL for receiving publish commands
push_in_spec=tcp://127.0.0.1:5560

# list of bind SUB for receiving published messages
push_in_sub_specs=tcp://127.0.0.1:5562

# whether the above SUB socket should connect instead of bind
push_in_sub_connect=false

# addr/port to listen on for receiving publish commands via HTTP
push_in_http_addr=127.0.0.1
push_in_http_port=5561

# maximum headers and body size in bytes when receiving publish commands via HTTP
push_in_http_max_headers_size=10000
push_in_http_max_body_size=1000000

# bind PUB for sending stats (metrics, subscription info, etc)
stats_spec=ipc://{rundir}/{ipc_prefix}stats

# bind REP for responding to commands
command_spec=tcp://127.0.0.1:5563

# max messages per second
message_rate=2500

# max rate-limited messages
message_hwm=25000

# set to report blocks counts in stats (content size / block size)
#message_block_size=

# max time (milliseconds) for out-of-order messages to wait
message_wait=5000

# time (seconds) to cache message ids
id_cache_ttl=60

# max subscriptions per connection
connection_subscription_max=20

# time (seconds) to linger response mode subscriptions
subscription_linger=60

# TTL (seconds) for subscription stats
stats_subscription_ttl=60

# interval (seconds) to send report stats
stats_report_interval=10

# stats output format
stats_format=tnetstring
