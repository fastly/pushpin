/*
-----BEGIN QCMOD-----
name: Boost.Signals2
section: libraries
description: Configuration for the Boost.Signals2 library, a part of the Boost C++ Libraries.
-----END QCMOD-----
*/
class qc_boost : public ConfObj
{
public:
    qc_boost(Conf *c) : ConfObj(c) {}
    QString name() const { return "Boost.Signals2"; }
    QString shortname() const { return "boost"; }
    bool isBoostInstalled()
    {
        QProcess process;
        process.start("bash", QStringList() << "-c" << "dpkg -l | grep libboost");
        process.waitForFinished();
        QString output(process.readAllStandardOutput());

        return output.contains("libboost");
    }
    QString findBoostIncludePath()
    {
        QStringList possiblePaths = { "/usr/local/include", "/usr/include" };
        QString boostHeader = "boost/config.hpp"; // Example Boost header file

        foreach (const QString &path, possiblePaths) {
            QDir dir(path);
            if (dir.exists(boostHeader)) {
                return path; // Return the path where Boost headers are found
            }
        }

        return QString(); // Return empty if Boost headers are not found
    }
    bool exec()
    {
        if (!isBoostInstalled()) {
            return false;
        }

        QString boostIncludePath = findBoostIncludePath();
        if (boostIncludePath.isEmpty()) {
            return false;
        }

        conf->addIncludePath(boostIncludePath);
        return true; 
    }
};